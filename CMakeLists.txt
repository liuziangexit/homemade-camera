cmake_minimum_required(VERSION 3.1)
project(homecam)
ENABLE_LANGUAGE(CXX)
set(CMAKE_CXX_STANDARD 17)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -g")
if (${CMAKE_SYSTEM_NAME} MATCHES "Linux")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pg")
endif ()

#disable MSVC language extensions
if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /Za")
endif ()

message(STATUS "System            : ${CMAKE_SYSTEM_NAME}")
message(STATUS "Project           : ${PROJECT_NAME}")
message(STATUS "Project Directory : ${PROJECT_SOURCE_DIR}")

add_executable(homecam src/main.cpp include/omx/jpeg.c)
find_package(OpenCV REQUIRED)
if (${CMAKE_SYSTEM_NAME} MATCHES "Linux")
    find_package(Threads REQUIRED)
    target_link_libraries(homecam Threads::Threads)
endif ()
find_package(OpenSSL REQUIRED)

#add_subdirectory(3rd-party/oneTBB)
#find_package(TBB REQUIRED PATHS 3rd-party/oneTBB)
find_package(TBB REQUIRED)

target_link_libraries(homecam ${OpenCV_LIBS} ${OPENSSL_LIBRARIES} TBB::tbb)
include_directories(homecam ./include ./3rd-party ${OPENCV_INCLUDE_DIRS} ${OPENSSL_INCLUDE_DIR} ${TBB_INCLUDE_DIR} 3rd-party/raspberrypi 3rd-party/ilclient)
find_library(ILCLIENT_LIBRARY ilclient HINTS 3rd-party/ilclient)
find_library(BCM_HOST_LIBRARY bcm_host HINTS /opt/vc/lib)
find_library(VCHIQ_ARM_LIBRARY vchiq_arm HINTS /opt/vc/lib)
find_library(VCHOSTIF_LIBRARY vchostif HINTS /opt/vc/lib)
find_library(VCILCS_LIBRARY vcilcs HINTS /opt/vc/lib)
find_library(VCOS_LIBRARY vcos HINTS /opt/vc/lib)
find_library(VCSM_LIBRARY vcsm HINTS /opt/vc/lib)
target_link_libraries(homecam ${ILCLIENT_LIBRARY} BCM_HOST_LIBRARY VCHIQ_ARM_LIBRARY VCHOSTIF_LIBRARY VCILCS_LIBRARY VCOS_LIBRARY VCSM_LIBRARY)
